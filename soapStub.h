/* soapStub.h
   Generated by gSOAP 2.8.122 for sclient.h

gSOAP XML Web services tools
Copyright (C) 2000-2021, Robert van Engelen, Genivia Inc. All Rights Reserved.
The soapcpp2 tool and its generated software are released under the GPL.
This program is released under the GPL with the additional exemption that
compiling, linking, and/or using OpenSSL is allowed.
--------------------------------------------------------------------------------
A commercial use license is available from Genivia Inc., contact@genivia.com
--------------------------------------------------------------------------------
*/


#ifndef soapStub_H
#define soapStub_H
#include "stdsoap2.h"
#if GSOAP_VERSION != 208122
# error "GSOAP VERSION 208122 MISMATCH IN GENERATED CODE VERSUS LIBRARY CODE: PLEASE REINSTALL PACKAGE"
#endif


/******************************************************************************\
 *                                                                            *
 * Types with Custom Serializers                                              *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Structs and Unions                                                         *
 *                                                                            *
\******************************************************************************/

struct concatStruct;	/* sclient.h:3 */
struct addStruct;	/* sclient.h:9 */
struct byeStruct;	/* sclient.h:15 */
struct ns__connectResponse;	/* sclient.h:26 */
struct ns__connect;	/* sclient.h:26 */
struct ns__echoResponse;	/* sclient.h:28 */
struct ns__echo;	/* sclient.h:28 */
struct ns__concatResponse;	/* sclient.h:32 */
struct ns__concat;	/* sclient.h:32 */
struct ns__adderResponse;	/* sclient.h:34 */
struct ns__adder;	/* sclient.h:34 */
struct ns__byeResponse;	/* sclient.h:36 */
struct ns__bye;	/* sclient.h:36 */

/* sclient.h:3 */
#ifndef SOAP_TYPE_concatStruct
#define SOAP_TYPE_concatStruct (7)
/* complex XML schema type 'concatStruct': */
struct concatStruct {
        /** Required element 'id' of XML schema type 'xsd:long' */
        long id;
        /** Required element 'op1' of XML schema type 'xsd:string' */
        char *op1;
        /** Required element 'op2' of XML schema type 'xsd:string' */
        char *op2;
};
#endif

/* sclient.h:9 */
#ifndef SOAP_TYPE_addStruct
#define SOAP_TYPE_addStruct (10)
/* complex XML schema type 'addStruct': */
struct addStruct {
        /** Required element 'id' of XML schema type 'xsd:long' */
        long id;
        /** Required element 'op1' of XML schema type 'xsd:long' */
        long op1;
        /** Required element 'op2' of XML schema type 'xsd:long' */
        long op2;
};
#endif

/* sclient.h:15 */
#ifndef SOAP_TYPE_byeStruct
#define SOAP_TYPE_byeStruct (12)
/* complex XML schema type 'byeStruct': */
struct byeStruct {
        /** Required element 'id' of XML schema type 'xsd:long' */
        long id;
};
#endif

/* sclient.h:26 */
#ifndef SOAP_TYPE_ns__connectResponse
#define SOAP_TYPE_ns__connectResponse (18)
/* complex XML schema type 'ns:connectResponse': */
struct ns__connectResponse {
        /** Optional element 'connect' of XML schema type 'ns:longType' */
        long *connect;
};
#endif

/* sclient.h:26 */
#ifndef SOAP_TYPE_ns__connect
#define SOAP_TYPE_ns__connect (19)
/* complex XML schema type 'ns:connect': */
struct ns__connect {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* sclient.h:28 */
#ifndef SOAP_TYPE_ns__echoResponse
#define SOAP_TYPE_ns__echoResponse (22)
/* complex XML schema type 'ns:echoResponse': */
struct ns__echoResponse {
        /** Optional element 'echo' of XML schema type 'ns:stringType' */
        char **echo;
};
#endif

/* sclient.h:28 */
#ifndef SOAP_TYPE_ns__echo
#define SOAP_TYPE_ns__echo (23)
/* complex XML schema type 'ns:echo': */
struct ns__echo {
        /** Required element 'echoRequest' of XML schema type 'ns:stringType' */
        char *echoRequest;
};
#endif

/* sclient.h:32 */
#ifndef SOAP_TYPE_ns__concatResponse
#define SOAP_TYPE_ns__concatResponse (25)
/* complex XML schema type 'ns:concatResponse': */
struct ns__concatResponse {
        /** Optional element 'concat' of XML schema type 'ns:stringType' */
        char **concat;
};
#endif

/* sclient.h:32 */
#ifndef SOAP_TYPE_ns__concat
#define SOAP_TYPE_ns__concat (26)
/* complex XML schema type 'ns:concat': */
struct ns__concat {
        /** Required element 'concatRequest' of XML schema type 'ns:concatType' */
        struct concatStruct concatRequest;
};
#endif

/* sclient.h:34 */
#ifndef SOAP_TYPE_ns__adderResponse
#define SOAP_TYPE_ns__adderResponse (28)
/* complex XML schema type 'ns:adderResponse': */
struct ns__adderResponse {
        /** Optional element 'adder' of XML schema type 'ns:longType' */
        long *adder;
};
#endif

/* sclient.h:34 */
#ifndef SOAP_TYPE_ns__adder
#define SOAP_TYPE_ns__adder (29)
/* complex XML schema type 'ns:adder': */
struct ns__adder {
        /** Required element 'adderRequest' of XML schema type 'ns:addType' */
        struct addStruct adderRequest;
};
#endif

/* sclient.h:36 */
#ifndef SOAP_TYPE_ns__byeResponse
#define SOAP_TYPE_ns__byeResponse (30)
/* complex XML schema type 'ns:byeResponse': */
struct ns__byeResponse {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif

/* sclient.h:36 */
#ifndef SOAP_TYPE_ns__bye
#define SOAP_TYPE_ns__bye (33)
/* complex XML schema type 'ns:bye': */
struct ns__bye {
        /** Required element 'byeRequest' of XML schema type 'ns:byeType' */
        struct byeStruct byeRequest;
};
#endif

/* sclient.h:38 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (34)
/* SOAP_ENV__Header: */
struct SOAP_ENV__Header {
#ifdef WITH_NOEMPTYSTRUCT
	char dummy;	/* empty struct is a GNU extension */
#endif
};
#endif
#endif

/* sclient.h:38 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (35)
/* Type SOAP_ENV__Code is a recursive data type, (in)directly referencing itself through its (base or derived class) members */
/* SOAP_ENV__Code: */
struct SOAP_ENV__Code {
        /** Optional element 'SOAP-ENV:Value' of XML schema type 'xsd:QName' */
        char *SOAP_ENV__Value;
        /** Optional element 'SOAP-ENV:Subcode' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Subcode;
};
#endif
#endif

/* sclient.h:38 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (37)
/* SOAP_ENV__Detail: */
struct SOAP_ENV__Detail {
        char *__any;
        /** Any type of element 'fault' assigned to fault with its SOAP_TYPE_<typename> assigned to __type */
        /** Do not create a cyclic data structure through this member unless SOAP encoding or SOAP_XML_GRAPH are used for id-ref serialization */
        int __type;
        void *fault;
};
#endif
#endif

/* sclient.h:38 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (40)
/* SOAP_ENV__Reason: */
struct SOAP_ENV__Reason {
        /** Optional element 'SOAP-ENV:Text' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Text;
};
#endif
#endif

/* sclient.h:38 */
#ifndef WITH_NOGLOBAL
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (41)
/* SOAP_ENV__Fault: */
struct SOAP_ENV__Fault {
        /** Optional element 'faultcode' of XML schema type 'xsd:QName' */
        char *faultcode;
        /** Optional element 'faultstring' of XML schema type 'xsd:string' */
        char *faultstring;
        /** Optional element 'faultactor' of XML schema type 'xsd:string' */
        char *faultactor;
        /** Optional element 'detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *detail;
        /** Optional element 'SOAP-ENV:Code' of XML schema type 'SOAP-ENV:Code' */
        struct SOAP_ENV__Code *SOAP_ENV__Code;
        /** Optional element 'SOAP-ENV:Reason' of XML schema type 'SOAP-ENV:Reason' */
        struct SOAP_ENV__Reason *SOAP_ENV__Reason;
        /** Optional element 'SOAP-ENV:Node' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Node;
        /** Optional element 'SOAP-ENV:Role' of XML schema type 'xsd:string' */
        char *SOAP_ENV__Role;
        /** Optional element 'SOAP-ENV:Detail' of XML schema type 'SOAP-ENV:Detail' */
        struct SOAP_ENV__Detail *SOAP_ENV__Detail;
};
#endif
#endif

/******************************************************************************\
 *                                                                            *
 * Typedefs                                                                   *
 *                                                                            *
\******************************************************************************/


/* (built-in):0 */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
typedef char *_XML;
#endif

/* (built-in):0 */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
typedef char *_QName;
#endif

/* sclient.h:7 */
#ifndef SOAP_TYPE_ns__concatType
#define SOAP_TYPE_ns__concatType (9)
typedef struct concatStruct ns__concatType;
#endif

/* sclient.h:13 */
#ifndef SOAP_TYPE_ns__addType
#define SOAP_TYPE_ns__addType (11)
typedef struct addStruct ns__addType;
#endif

/* sclient.h:17 */
#ifndef SOAP_TYPE_ns__byeType
#define SOAP_TYPE_ns__byeType (13)
typedef struct byeStruct ns__byeType;
#endif

/* sclient.h:23 */
#ifndef SOAP_TYPE_ns__stringType
#define SOAP_TYPE_ns__stringType (14)
typedef char *ns__stringType;
#endif

/* sclient.h:24 */
#ifndef SOAP_TYPE_ns__longType
#define SOAP_TYPE_ns__longType (15)
typedef long ns__longType;
#endif

/******************************************************************************\
 *                                                                            *
 * Serializable Types                                                         *
 *                                                                            *
\******************************************************************************/


/* char has binding name 'byte' for type 'xsd:byte' */
#ifndef SOAP_TYPE_byte
#define SOAP_TYPE_byte (3)
#endif

/* int has binding name 'int' for type 'xsd:int' */
#ifndef SOAP_TYPE_int
#define SOAP_TYPE_int (1)
#endif

/* ns__longType has binding name 'ns__longType' for type 'ns:longType' */
#ifndef SOAP_TYPE_ns__longType
#define SOAP_TYPE_ns__longType (15)
#endif

/* long has binding name 'long' for type 'xsd:long' */
#ifndef SOAP_TYPE_long
#define SOAP_TYPE_long (8)
#endif

/* struct SOAP_ENV__Fault has binding name 'SOAP_ENV__Fault' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Fault
#define SOAP_TYPE_SOAP_ENV__Fault (41)
#endif

/* struct SOAP_ENV__Reason has binding name 'SOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Reason
#define SOAP_TYPE_SOAP_ENV__Reason (40)
#endif

/* struct SOAP_ENV__Detail has binding name 'SOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Detail
#define SOAP_TYPE_SOAP_ENV__Detail (37)
#endif

/* struct SOAP_ENV__Code has binding name 'SOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Code
#define SOAP_TYPE_SOAP_ENV__Code (35)
#endif

/* struct SOAP_ENV__Header has binding name 'SOAP_ENV__Header' for type '' */
#ifndef SOAP_TYPE_SOAP_ENV__Header
#define SOAP_TYPE_SOAP_ENV__Header (34)
#endif

/* struct ns__bye has binding name 'ns__bye' for type 'ns:bye' */
#ifndef SOAP_TYPE_ns__bye
#define SOAP_TYPE_ns__bye (33)
#endif

/* struct ns__byeResponse has binding name 'ns__byeResponse' for type 'ns:byeResponse' */
#ifndef SOAP_TYPE_ns__byeResponse
#define SOAP_TYPE_ns__byeResponse (30)
#endif

/* struct ns__adder has binding name 'ns__adder' for type 'ns:adder' */
#ifndef SOAP_TYPE_ns__adder
#define SOAP_TYPE_ns__adder (29)
#endif

/* struct ns__adderResponse has binding name 'ns__adderResponse' for type 'ns:adderResponse' */
#ifndef SOAP_TYPE_ns__adderResponse
#define SOAP_TYPE_ns__adderResponse (28)
#endif

/* struct ns__concat has binding name 'ns__concat' for type 'ns:concat' */
#ifndef SOAP_TYPE_ns__concat
#define SOAP_TYPE_ns__concat (26)
#endif

/* struct ns__concatResponse has binding name 'ns__concatResponse' for type 'ns:concatResponse' */
#ifndef SOAP_TYPE_ns__concatResponse
#define SOAP_TYPE_ns__concatResponse (25)
#endif

/* struct ns__echo has binding name 'ns__echo' for type 'ns:echo' */
#ifndef SOAP_TYPE_ns__echo
#define SOAP_TYPE_ns__echo (23)
#endif

/* struct ns__echoResponse has binding name 'ns__echoResponse' for type 'ns:echoResponse' */
#ifndef SOAP_TYPE_ns__echoResponse
#define SOAP_TYPE_ns__echoResponse (22)
#endif

/* struct ns__connect has binding name 'ns__connect' for type 'ns:connect' */
#ifndef SOAP_TYPE_ns__connect
#define SOAP_TYPE_ns__connect (19)
#endif

/* struct ns__connectResponse has binding name 'ns__connectResponse' for type 'ns:connectResponse' */
#ifndef SOAP_TYPE_ns__connectResponse
#define SOAP_TYPE_ns__connectResponse (18)
#endif

/* ns__byeType has binding name 'ns__byeType' for type 'ns:byeType' */
#ifndef SOAP_TYPE_ns__byeType
#define SOAP_TYPE_ns__byeType (13)
#endif

/* struct byeStruct has binding name 'byeStruct' for type 'byeStruct' */
#ifndef SOAP_TYPE_byeStruct
#define SOAP_TYPE_byeStruct (12)
#endif

/* ns__addType has binding name 'ns__addType' for type 'ns:addType' */
#ifndef SOAP_TYPE_ns__addType
#define SOAP_TYPE_ns__addType (11)
#endif

/* struct addStruct has binding name 'addStruct' for type 'addStruct' */
#ifndef SOAP_TYPE_addStruct
#define SOAP_TYPE_addStruct (10)
#endif

/* ns__concatType has binding name 'ns__concatType' for type 'ns:concatType' */
#ifndef SOAP_TYPE_ns__concatType
#define SOAP_TYPE_ns__concatType (9)
#endif

/* struct concatStruct has binding name 'concatStruct' for type 'concatStruct' */
#ifndef SOAP_TYPE_concatStruct
#define SOAP_TYPE_concatStruct (7)
#endif

/* struct SOAP_ENV__Reason * has binding name 'PointerToSOAP_ENV__Reason' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Reason
#define SOAP_TYPE_PointerToSOAP_ENV__Reason (43)
#endif

/* struct SOAP_ENV__Detail * has binding name 'PointerToSOAP_ENV__Detail' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Detail
#define SOAP_TYPE_PointerToSOAP_ENV__Detail (42)
#endif

/* struct SOAP_ENV__Code * has binding name 'PointerToSOAP_ENV__Code' for type '' */
#ifndef SOAP_TYPE_PointerToSOAP_ENV__Code
#define SOAP_TYPE_PointerToSOAP_ENV__Code (36)
#endif

/* struct ns__byeResponse * has binding name 'PointerTons__byeResponse' for type 'ns:byeResponse' */
#ifndef SOAP_TYPE_PointerTons__byeResponse
#define SOAP_TYPE_PointerTons__byeResponse (31)
#endif

/* char ** has binding name 'PointerTons__stringType' for type 'ns:stringType' */
#ifndef SOAP_TYPE_PointerTons__stringType
#define SOAP_TYPE_PointerTons__stringType (20)
#endif

/* long * has binding name 'PointerTons__longType' for type 'ns:longType' */
#ifndef SOAP_TYPE_PointerTons__longType
#define SOAP_TYPE_PointerTons__longType (16)
#endif

/* ns__stringType has binding name 'ns__stringType' for type 'ns:stringType' */
#ifndef SOAP_TYPE_ns__stringType
#define SOAP_TYPE_ns__stringType (14)
#endif

/* _QName has binding name '_QName' for type 'xsd:QName' */
#ifndef SOAP_TYPE__QName
#define SOAP_TYPE__QName (6)
#endif

/* _XML has binding name '_XML' for type '' */
#ifndef SOAP_TYPE__XML
#define SOAP_TYPE__XML (5)
#endif

/* char * has binding name 'string' for type 'xsd:string' */
#ifndef SOAP_TYPE_string
#define SOAP_TYPE_string (4)
#endif

/******************************************************************************\
 *                                                                            *
 * Externals                                                                  *
 *                                                                            *
\******************************************************************************/


/******************************************************************************\
 *                                                                            *
 * Server-Side Operations                                                     *
 *                                                                            *
\******************************************************************************/

    /** Web service operation 'ns__connect' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__connect(struct soap*, long *connect);
    /** Web service operation 'ns__echo' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__echo(struct soap*, char *echoRequest, char **echo);
    /** Web service operation 'ns__concat' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__concat(struct soap*, struct concatStruct concatRequest, char **concat);
    /** Web service operation 'ns__adder' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__adder(struct soap*, struct addStruct adderRequest, long *adder);
    /** Web service operation 'ns__bye' implementation, should return SOAP_OK or error code */
    SOAP_FMAC5 int SOAP_FMAC6 ns__bye(struct soap*, struct byeStruct byeRequest, struct ns__byeResponse *bye);

/******************************************************************************\
 *                                                                            *
 * Server-Side Skeletons to Invoke Service Operations                         *
 *                                                                            *
\******************************************************************************/

SOAP_FMAC5 int SOAP_FMAC6 soap_serve(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_request(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__connect(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__echo(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__concat(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__adder(struct soap*);

SOAP_FMAC5 int SOAP_FMAC6 soap_serve_ns__bye(struct soap*);

#endif

/* End of soapStub.h */
